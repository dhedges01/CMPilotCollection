#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: a95b79fa-aa86-4b37-a039-7073dbc36dd8
# Source File: Create-CMPilotCollection.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
QzQAAB+LCAAAAAAABADtm21v4jgQgL+fdP/BinTSncQCAcLLCiIVur1DR7dV6fbuW2USA76aGDmm
Lffrd0wo5S2JA4SCVFWqePF4ZuzHM+MB6nfE4c9ETC+xxAge+JR7DaNg2L/+glD9RtAB9TC7oox8
xyNitwTBknxpXd9SxmWLM0YcCSLZsd+v5zaGB5P0/oNBSE7HpGF0p74ko+w/1HP5i5+94mIU/M+g
bW9l0MPcplI2r/4yqDVhciJIwyMTKTDLoNtJj1HnbzK950/Ea/QqFWw5VtmsFUskX60ZyANTGkYf
5gvMX7PdQM6QMleArNHinhSc+YH/YPyt4GMi5HQ+ycVE8i79n1xzlxj2n4K/XHhudyio91TPvY0N
kW1i5wm0cmHYczWxIi1GiSeVQsMu5asZZJWsWKErmNywr6kjuM/7EnWx56MuEbSfQdVswRrL2CnU
5hl26IrFyneH/KXtwNLaV5j5JHb8PXkFkwNdaKYMRWn79gyrMhftcOxGmPqo3q/nZhJv4vFAdmA/
O7hHWOpUMtDElKa/pBy7ZMz4dASmCjwC8SgyNxexwx0849k2i0CKuUlK2EZHGqExSwCoWTEzqFDU
GH+Pe23PJa8gY+oN70o+Nux7MdlkKYymIfjyNZdbd8cb+FmHjzSnuWB04KnD5LqMdEh/8+is4whL
CafWeSJuzLo+Lg1dAzQXEKrPqzK1yV9Tp1WCnh5/7fBBMjQ1Ql8cz8VSSUPmGhyjsOxEG5bgBLw7
piFyR7B747Gpto4uhGLGmljAEsFeSOpgnQUIjlXRgrhvlnW8XzpX+STnKiRIJ8awOZGSe6lT2Jup
SZzLd8mUGeTLKSONJmduMmTNEgTDakGbwAinEkTgcgaVdHS+k1LTDqi66XlT/odPHqg/wayrFnMp
GISdn+WIOguRkevzOBuybwyFYm4yPkYQHShFEGwKpwMrxFfT0knFAasLD/SDWLkGKrRKknc0q/vH
sDCW1yFGbU+VkDgM6JNLwWtH4JqMekS0+AQYiaQqGgOIWdVtGMSkzXBjtOaKzadhVBUKKshuS3VR
WFV0x0eDFVkw3tHBcGutuBqWzoCsWyIcsjdV1raTv6V8w68d4g3kECLG3hjOLU+dp21RcCc41hKf
kmgNsTdQV4lIFx+Xhq6mwY1JHzCjLuyMN4ib832k3pTxVi4Grk94fqdixt1+R6Kox00U4eq91PHW
ywfJ8Y4nUbm3E4ZOsBuHBe5I/SClJaYyPEjLL5pQuEdUt904QztIM7MTsGgW8yHNosOEWsP+PlFV
COJ9FNQj/tcD5eMjgvB+Fsxa7cOhqEAe31aTR0Kx4kISQKywbuJhgpXqRC2q/9/Q7+aXWu2PM0Sk
9OFYQKwo6pV3S1joBZc5CoXaDiho5rkgVsBjjb0/g6aCeVpNBZ1PA1Z7CjpdiOWewtYyKhkVB+op
NLFPzrmloOxPo6Ng5neodEON+ewonF1HYXUv78GuPYmq6BUSEUApI06RpPInSfoktS+P05WK4Kh9
eYoU6bn1SdFHtnI2jThFkvTK9NMh6UPu5rtktDQu51s/bda8nGsnxH2uZJrj12/nyrYzvJkHDaib
/rz99OGElFUpnviivubFZ4svtTCSvJxJAxErSW294UHqIWTHBl/78gzR2KUySSOvFPVuJctBI9kH
U6fZ4Ft9Ek/GNyG4AA3P1CUidUKI0jaeazPDvq+ukMHUU72TGTtLncA70ieAlUPmQyO+H59bLM/K
Aq4u0IXvE/W9VuK/jZ6/MrVHvsMFo70DuF/PLWZd1xIs+DF0HHxT4zWq32ccR5HAL9Qb7KIrX+xb
/UrfNF0rj4s4Xte/I3Ycn6gATLmYQiB8pg7ZacsSe9fighzFvblXcDbBtRR8WzwNznY9t/yjIfsn
M++LnkM0AAA=#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.93
     Generated on:       9/2/2015 2:32 PM
     Generated by:        Dustin Hedges
     Organization:       deploymentramblings.wordpress.com
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2015
#>
[CmdletBinding()]
param
(
	[Parameter(ValueFromPipeline = $true,
			ValueFromPipelineByPropertyName = $true,
			Position = 0)]
	[ValidateNotNullOrEmpty()]
	[System.String]$CollectionID,
	[Parameter(ValueFromPipeline = $true,
			ValueFromPipelineByPropertyName = $true,
			Position = 1)]
	[ValidateNotNullOrEmpty()]
	[System.String]$SiteServer,
	[Parameter(ValueFromPipeline = $true,
			ValueFromPipelineByPropertyName = $true,
			Position = 2)]
	[ValidateNotNullOrEmpty()]
	[System.String]$Namespace
)

#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-Create-CMPilotCollection_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formCreatePilotCollection = New-Object 'System.Windows.Forms.Form'
	$linklabelHttpdeploymentrambli = New-Object 'System.Windows.Forms.LinkLabel'
	$textboxLog = New-Object 'System.Windows.Forms.TextBox'
	$buttonCreatePilotCollection = New-Object 'System.Windows.Forms.Button'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$textboxPilotCollectionMemberCount = New-Object 'System.Windows.Forms.TextBox'
	$textboxPilotCollectionPercent = New-Object 'System.Windows.Forms.TextBox'
	$textboxPilotCollectionName = New-Object 'System.Windows.Forms.TextBox'
	$label2 = New-Object 'System.Windows.Forms.Label'
	$labelCollection199 = New-Object 'System.Windows.Forms.Label'
	$label4 = New-Object 'System.Windows.Forms.Label'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$textboxBaseCollectionMemberCount = New-Object 'System.Windows.Forms.TextBox'
	$textboxBaseCollectionType = New-Object 'System.Windows.Forms.TextBox'
	$textboxBaseCollectionID = New-Object 'System.Windows.Forms.TextBox'
	$textboxBaseCollectionName = New-Object 'System.Windows.Forms.TextBox'
	$labelCollectionType = New-Object 'System.Windows.Forms.Label'
	$labelNumberOfMembers = New-Object 'System.Windows.Forms.Label'
	$labelCollectionID = New-Object 'System.Windows.Forms.Label'
	$labelName = New-Object 'System.Windows.Forms.Label'
	$errorprovider1 = New-Object 'System.Windows.Forms.ErrorProvider'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	$formCreatePilotCollection_Load = {
		
		
		
		$Global:BaseCollection = Get-WmiObject -ComputerName $SiteServer -Namespace $Namespace -Class 'SMS_Collection' -Filter "CollectionID='$CollectionID'"
		
		# Fill in Base Collection Information
		$textboxBaseCollectionName.Text = $BaseCollection.Name
		$textboxBaseCollectionID.Text = $BaseCollection.CollectionID
		switch ($BaseCollection.CollectionType) {
			'1' {
				$textboxBaseCollectionType.Text = 'User'
			}
			'2' {
				$textboxBaseCollectionType.Text = 'Device'
			}
		}
		$textboxBaseCollectionMemberCount.Text = $BaseCollection.MemberCount
		if ($BaseCollection.MemberCount -lt 10) {
			$buttonCreatePilotCollection.Enabled = $false
			$textboxLog.AppendText("ERROR: Base Collection Membership is less than 10. Unable to create pilot collection.`r`n")
			$errorprovider1.SetIconAlignment($textboxBaseCollectionMemberCount,"MiddleLeft")
			$errorprovider1.SetError($textboxBaseCollectionMemberCount,"Base Collection Membership is less than 10.  Unable to create pilot collection.")
			$textboxPilotCollectionName.Enabled = $false
			$textboxPilotCollectionPercent.Enabled = $false
		}
		else {
			$textboxPilotCollectionName.Text = $BaseCollection.Name + " - Pilot"
			$errorprovider1.SetError($textboxBaseCollectionName,"")
		}
		
	}
	
	
			<#
		.SYNOPSIS
			Creates a new ConfigMgr Collection
		
		.DESCRIPTION
			A detailed description of the New-CMCollection function.
		
		.PARAMETER SiteServer
			A description of the SiteServer parameter.
		
		.PARAMETER SiteCode
			A description of the SiteCode parameter.
		
		.PARAMETER CollectionName
			A description of the CollectionName parameter.
		
		.PARAMETER CollectionType
			A description of the CollectionType parameter.
		
		.PARAMETER LimitingCollectionID
			A description of the LimitingCollectionID parameter.
		
		.EXAMPLE
					PS C:\> New-CMCollection -SiteServer 'Value1' -SiteCode 'Value2'
		
		.NOTES
			Additional information about the function.
	#>
	function New-CMCollection
	{
		[CmdletBinding()]
		param
		(
			[Parameter(Position = 0)]
			[System.String]$SiteServer,
			[Parameter(Position = 1)]
			[System.String]$Namespace,
			[Parameter(Position = 2)]
			[System.String]$CollectionName,
			[Parameter(Position = 3)]
			[Int]$CollectionType,
			[Parameter(Position = 4)]
			[System.String]$LimitingCollectionID
		)
		
		Try
		{
			$Arguments = @{
				Name = $CollectionName; OwnedByThisSite = $True;`
				LimitToCollectionID = $LimitingCollectionID; CollectionType = $CollectionType
			}
			Set-WmiInstance -ComputerName $SiteServer -Namespace $Namespace -Class SMS_Collection -Arguments $Arguments -ErrorAction Stop
		}
		Catch
		{
			$_.Exception.Message
		}
	}
	
	
	<#
		.SYNOPSIS
			Validates wether a ConfigMgr Collection exists or not
		
		.DESCRIPTION
			A detailed description of the Validate-CMCollection function.
		
		.PARAMETER SiteServer
			A description of the SiteServer parameter.
		
		.PARAMETER Namespace
			A description of the SiteCode parameter.
		
		.PARAMETER CollectionName
			A description of the CollectionName parameter.
		
		.PARAMETER CollectionID
			A description of the CollectionID parameter.
		
		.PARAMETER SiteCode
			A description of the SiteCode parameter.
		
		.EXAMPLE
			PS C:\> Validate-CMCollection -SiteServer 'Value1' -SiteCode 'Value2'
		
		.NOTES
			Additional information about the function.
	#>
	function Validate-CMCollection {
		[CmdletBinding(DefaultParameterSetName = 'ByName')]
		[OutputType([bool])]
		param
		(
			[Parameter(Mandatory = $true,
					   Position = 0)]
			[System.String]$SiteServer,
			[Parameter(Mandatory = $true,
					   Position = 1)]
			[System.String]$Namespace,
			[Parameter(ParameterSetName = 'ByName',
					   Position = 2)]
			[System.String]$CollectionName,
			[Parameter(ParameterSetName = 'ByID',
					   Position = 2)]
			[System.String]$CollectionID
		)
		
		switch ($PsCmdlet.ParameterSetName) {
			'ByName' {
				if (Get-WmiObject -ComputerName $SiteServer -Namespace $Namespace -Class 'SMS_Collection' -Filter "Name='$CollectionName'") {
					return $true
				}
				else {
					return $false
				}
				break
			}
			'ByID' {
				if (Get-WmiObject -ComputerName $SiteServer -Namespace $Namespace -Class 'SMS_Collection' -Filter "CollectionID='$CollectionID'") {
					return $true
				}
				else {
					return $false
				}
				break
			}
		}
	}
	
	function Validate-IsEmptyTrim 
	{
		<#
			.SYNOPSIS
				Validates if input is empty (ignores spaces).
		
			.DESCRIPTION
				Validates if input is empty (ignores spaces).
		
			.PARAMETER  Text
				A string containing an IP address
		
			.INPUTS
				System.String
		
			.OUTPUTS
				System.Boolean
		#>
		[OutputType([Boolean])]
		param([string]$Text)
		
		if($text -eq $null -or $text.Trim().Length -eq 0)
		{
			return $true	
		}
		
		return $false
	}
	
	$buttonCreatePilotCollection_Click = {	
		$textboxLog.AppendText("Obtaining Base Collection Members... This may take a while...`r`n")
		$Global:BaseCollectionMembers = Get-WmiObject -ComputerName $SiteServer -Namespace $Namespace -Class $($BaseCollection.MemberClassName)
		
		$textboxLog.AppendText("Randomly Selecting Pilot Members...`r`n")
		$Script:PilotMembers = $BaseCollectionMembers | Get-Random -Count ([Int32]$([math]::Round(($BaseCollectionMembers.Count * ($PercentageOfCollection / 100)))))
		
		$textboxLog.AppendText("Creating Pilot Collection: $($textboxPilotCollectionName.Text)`r`n")
		$PilotCollection = New-CMCollection -SiteServer $SiteServer -Namespace $Namespace -CollectionName $textboxPilotCollectionName.Text -CollectionType $BaseCollection.CollectionType -LimitingCollectionID $BaseCollection.CollectionID
		$PilotCollection.Get() # Read Lazy Properties
		
		# Add Pilot Members to Pilot Collection
		$textboxLog.AppendText("Pilot Members to Collection...`r`n")
		
		foreach ($Member in $PilotMembers)
		{
			#Create new direct membership rule
			$NewRule = ([WMIClass]"\\$SiteServer\$($Namespace):SMS_CollectionRuleDirect").CreateInstance()
			switch ($BaseCollection.CollectionType)
			{
				'1' {
					$NewRule.ResourceClassName = "SMS_R_User"
				}
				'2' {
					$NewRule.ResourceClassName = "SMS_R_System"
				}
			}
			$NewRule.ResourceID = $Member.ResourceID
			$NewRule.Rulename = $Member.Name
			
			
			Try {
				$textboxLog.AppendText("Adding Direct Membership Rule: $($NewRule.Rulename)`r`n")
				$PilotCollection.CollectionRules += $NewRule.psobject.baseobject
			}
			Catch {
				$textboxLog.AppendText("FAILED to add rule: $($NewRule.Rulename)`r`n")
			}
		}
		
		# Commit changes to the Pilot Collection and initiate a Membership Refresh
		$PilotCollection.Put()
		$PilotCollection.RequestRefresh()
		
		$textboxLog.AppendText("Initiating Collection Refresh...`r`n")
		$textboxLog.AppendText("Pilot Collection Name: $($PilotCollection.Name)`r`n")
		$textboxLog.AppendText("Pilot Collection ID: $($PilotCollection.CollectionID)`r`n")
		$textboxLog.AppendText("Pilot collection created successfully. Review the log for any failures.`r`n")
		
	}
	
	$textboxPilotCollectionPercent_TextChanged={
		if ($textboxPilotCollectionPercent.Text.Trim() -in 1..99) {
			$errorprovider1.SetError($textboxPilotCollectionPercent,"")
			#$buttonCreatePilotCollection.Enabled = $true
			
			# Get Random Members for Pilot Collection		
			[Int32]$Script:PercentageOfCollection = $textboxPilotCollectionPercent.text
			$textboxPilotCollectionMemberCount.Text = [Int32]$([math]::Round(($BaseCollection.MemberCount * ($PercentageOfCollection / 100))))
		}
		else
		{
			#$buttonCreatePilotCollection.Enabled = $false
			$errorprovider1.SetIconAlignment($textboxPilotCollectionPercent, "MiddleLeft")
			$errorprovider1.SetError($textboxPilotCollectionPercent,"Percentage must be entered as a nuymber between 1-99")
		}
		
	}
	
	$textboxPilotCollectionName_Validating=[System.ComponentModel.CancelEventHandler]{
	#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
		if (Validate-IsEmptyTrim -Text $textboxPilotCollectionName.Text) {
			$errorprovider1.SetIconAlignment($this, "MiddleLeft")
			$errorprovider1.SetError($this, "Collection name cannot be blank.")
			$_.Cancel = $true
		}
		elseif (Validate-CMCollection -SiteServer $SiteServer -Namespace $Namespace -CollectionName $textboxPilotCollectionName.Text) {
			$errorprovider1.SetIconAlignment($this, "MiddleLeft")
			$errorprovider1.SetError($this, "Collection name is already in use.")
			$_.Cancel = $true
		}
		else {
			$_.Cancel = $false
		}
	}
	
	$control_Validated={
	    #Pass the calling control and clear error message
	    $errorprovider1.SetError($this, "");    
	}
	
	$textboxPilotCollectionPercent_Validating=[System.ComponentModel.CancelEventHandler]{
	#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
		if (Validate-IsEmptyTrim -Text $textboxPilotCollectionPercent.Text) {
			$errorprovider1.SetIconAlignment($this, "MiddleLeft")
			$errorprovider1.SetError($this, "Value cannot be blank.")
			$_.Cancel = $true
		}
		elseif ($textboxPilotCollectionPercent.Text.Trim() -notin 1..99) {
			$errorprovider1.SetIconAlignment($this, "MiddleLeft")
			$errorprovider1.SetError($this, "Value must be between 1-99.")
			$_.Cancel = $true
		}
		else {
			$_.Cancel = $false	
		}
		
	}
	
	$textboxPilotCollectionPercent_Validated={
		# Get Random Members for Pilot Collection		
		[Int32]$Script:PercentageOfCollection = $textboxPilotCollectionPercent.text
		$textboxPilotCollectionMemberCount.Text = [Int32]$([math]::Round(($BaseCollection.MemberCount * ($PercentageOfCollection / 100))))	
	}
	
	$linklabelHttpdeploymentrambli_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
		#TODO: Place custom script here
		[System.Diagnostics.Process]::Start("http://deploymentramblings.wordpress.com")
	}#end linklabelHttpdeploymentrambli_LinkClicked
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formCreatePilotCollection.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$linklabelHttpdeploymentrambli.remove_LinkClicked($linklabelHttpdeploymentrambli_LinkClicked)
			$buttonCreatePilotCollection.remove_Click($buttonCreatePilotCollection_Click)
			$textboxPilotCollectionPercent.remove_TextChanged($textboxPilotCollectionPercent_TextChanged)
			$textboxPilotCollectionPercent.remove_Validating($textboxPilotCollectionPercent_Validating)
			$textboxPilotCollectionPercent.remove_Validated($textboxPilotCollectionPercent_Validated)
			$textboxPilotCollectionName.remove_Validating($textboxPilotCollectionName_Validating)
			$textboxPilotCollectionName.remove_Validated($control_Validated)
			$formCreatePilotCollection.remove_Load($formCreatePilotCollection_Load)
			$formCreatePilotCollection.remove_Load($Form_StateCorrection_Load)
			$formCreatePilotCollection.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formCreatePilotCollection.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox1.SuspendLayout()
	#
	# formCreatePilotCollection
	#
	$formCreatePilotCollection.Controls.Add($linklabelHttpdeploymentrambli)
	$formCreatePilotCollection.Controls.Add($textboxLog)
	$formCreatePilotCollection.Controls.Add($buttonCreatePilotCollection)
	$formCreatePilotCollection.Controls.Add($groupbox2)
	$formCreatePilotCollection.Controls.Add($groupbox1)
	$formCreatePilotCollection.AutoSizeMode = 'GrowAndShrink'
	$formCreatePilotCollection.BackColor = 'Control'
	$formCreatePilotCollection.ClientSize = '408, 545'
	$formCreatePilotCollection.Font = 'Microsoft Sans Serif, 8.25pt'
	$formCreatePilotCollection.Name = 'formCreatePilotCollection'
	$formCreatePilotCollection.ShowIcon = $False
	$formCreatePilotCollection.Text = 'Create Pilot Collection'
	$formCreatePilotCollection.add_Load($formCreatePilotCollection_Load)
	#
	# linklabelHttpdeploymentrambli
	#
	$linklabelHttpdeploymentrambli.Location = '13, 515'
	$linklabelHttpdeploymentrambli.Name = 'linklabelHttpdeploymentrambli'
	$linklabelHttpdeploymentrambli.Size = '171, 23'
	$linklabelHttpdeploymentrambli.TabIndex = 11
	$linklabelHttpdeploymentrambli.TabStop = $True
	$linklabelHttpdeploymentrambli.Text = 'http://deploymentramblings.com'
	$linklabelHttpdeploymentrambli.TextAlign = 'MiddleLeft'
	$linklabelHttpdeploymentrambli.add_LinkClicked($linklabelHttpdeploymentrambli_LinkClicked)
	#
	# textboxLog
	#
	$textboxLog.BackColor = 'Control'
	$textboxLog.Location = '13, 344'
	$textboxLog.Multiline = $True
	$textboxLog.Name = 'textboxLog'
	$textboxLog.ReadOnly = $True
	$textboxLog.ScrollBars = 'Vertical'
	$textboxLog.Size = '358, 164'
	$textboxLog.TabIndex = 10
	$textboxLog.TabStop = $False
	#
	# buttonCreatePilotCollection
	#
	$buttonCreatePilotCollection.Font = 'Microsoft Sans Serif, 8.25pt, style=Bold'
	$buttonCreatePilotCollection.Location = '114, 282'
	$buttonCreatePilotCollection.Name = 'buttonCreatePilotCollection'
	$buttonCreatePilotCollection.Size = '176, 42'
	$buttonCreatePilotCollection.TabIndex = 9
	$buttonCreatePilotCollection.Text = 'Create Pilot Collection'
	$buttonCreatePilotCollection.UseVisualStyleBackColor = $True
	$buttonCreatePilotCollection.add_Click($buttonCreatePilotCollection_Click)
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($textboxPilotCollectionMemberCount)
	$groupbox2.Controls.Add($textboxPilotCollectionPercent)
	$groupbox2.Controls.Add($textboxPilotCollectionName)
	$groupbox2.Controls.Add($label2)
	$groupbox2.Controls.Add($labelCollection199)
	$groupbox2.Controls.Add($label4)
	$groupbox2.Font = 'Microsoft Sans Serif, 8.25pt, style=Bold'
	$groupbox2.Location = '13, 151'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Size = '369, 115'
	$groupbox2.TabIndex = 8
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Pilot Collection Information'
	#
	# textboxPilotCollectionMemberCount
	#
	$textboxPilotCollectionMemberCount.Location = '134, 81'
	$textboxPilotCollectionMemberCount.Name = 'textboxPilotCollectionMemberCount'
	$textboxPilotCollectionMemberCount.ReadOnly = $True
	$textboxPilotCollectionMemberCount.Size = '224, 20'
	$textboxPilotCollectionMemberCount.TabIndex = 7
	$textboxPilotCollectionMemberCount.TabStop = $False
	$textboxPilotCollectionMemberCount.TextAlign = 'Right'
	#
	# textboxPilotCollectionPercent
	#
	$textboxPilotCollectionPercent.Location = '134, 55'
	$textboxPilotCollectionPercent.MaxLength = 3
	$textboxPilotCollectionPercent.Name = 'textboxPilotCollectionPercent'
	$textboxPilotCollectionPercent.Size = '224, 20'
	$textboxPilotCollectionPercent.TabIndex = 2
	$textboxPilotCollectionPercent.TextAlign = 'Right'
	$textboxPilotCollectionPercent.add_TextChanged($textboxPilotCollectionPercent_TextChanged)
	$textboxPilotCollectionPercent.add_Validating($textboxPilotCollectionPercent_Validating)
	$textboxPilotCollectionPercent.add_Validated($textboxPilotCollectionPercent_Validated)
	#
	# textboxPilotCollectionName
	#
	$textboxPilotCollectionName.Location = '134, 32'
	$textboxPilotCollectionName.Name = 'textboxPilotCollectionName'
	$textboxPilotCollectionName.Size = '224, 20'
	$textboxPilotCollectionName.TabIndex = 1
	$textboxPilotCollectionName.TextAlign = 'Right'
	$textboxPilotCollectionName.add_Validating($textboxPilotCollectionName_Validating)
	$textboxPilotCollectionName.add_Validated($control_Validated)
	#
	# label2
	#
	$label2.Font = 'Microsoft Sans Serif, 8.25pt'
	$label2.Location = '6, 84'
	$label2.Name = 'label2'
	$label2.Size = '130, 23'
	$label2.TabIndex = 2
	$label2.Text = 'Number of Members:'
	#
	# labelCollection199
	#
	$labelCollection199.Font = 'Microsoft Sans Serif, 8.25pt'
	$labelCollection199.Location = '7, 58'
	$labelCollection199.Name = 'labelCollection199'
	$labelCollection199.Size = '151, 23'
	$labelCollection199.TabIndex = 1
	$labelCollection199.Text = 'Collection % (1-99):'
	#
	# label4
	#
	$label4.Font = 'Microsoft Sans Serif, 8.25pt'
	$label4.Location = '6, 35'
	$label4.Name = 'label4'
	$label4.Size = '129, 23'
	$label4.TabIndex = 0
	$label4.Text = 'Name:'
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($textboxBaseCollectionMemberCount)
	$groupbox1.Controls.Add($textboxBaseCollectionType)
	$groupbox1.Controls.Add($textboxBaseCollectionID)
	$groupbox1.Controls.Add($textboxBaseCollectionName)
	$groupbox1.Controls.Add($labelCollectionType)
	$groupbox1.Controls.Add($labelNumberOfMembers)
	$groupbox1.Controls.Add($labelCollectionID)
	$groupbox1.Controls.Add($labelName)
	$groupbox1.Font = 'Microsoft Sans Serif, 8.25pt, style=Bold'
	$groupbox1.Location = '13, 13'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Size = '369, 132'
	$groupbox1.TabIndex = 0
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Base Collection Information'
	#
	# textboxBaseCollectionMemberCount
	#
	$textboxBaseCollectionMemberCount.Location = '134, 102'
	$textboxBaseCollectionMemberCount.Name = 'textboxBaseCollectionMemberCount'
	$textboxBaseCollectionMemberCount.ReadOnly = $True
	$textboxBaseCollectionMemberCount.Size = '224, 20'
	$textboxBaseCollectionMemberCount.TabIndex = 7
	$textboxBaseCollectionMemberCount.TabStop = $False
	$textboxBaseCollectionMemberCount.TextAlign = 'Right'
	#
	# textboxBaseCollectionType
	#
	$textboxBaseCollectionType.Location = '134, 79'
	$textboxBaseCollectionType.Name = 'textboxBaseCollectionType'
	$textboxBaseCollectionType.ReadOnly = $True
	$textboxBaseCollectionType.Size = '224, 20'
	$textboxBaseCollectionType.TabIndex = 6
	$textboxBaseCollectionType.TabStop = $False
	$textboxBaseCollectionType.TextAlign = 'Right'
	#
	# textboxBaseCollectionID
	#
	$textboxBaseCollectionID.Location = '134, 55'
	$textboxBaseCollectionID.Name = 'textboxBaseCollectionID'
	$textboxBaseCollectionID.ReadOnly = $True
	$textboxBaseCollectionID.Size = '224, 20'
	$textboxBaseCollectionID.TabIndex = 5
	$textboxBaseCollectionID.TabStop = $False
	$textboxBaseCollectionID.TextAlign = 'Right'
	#
	# textboxBaseCollectionName
	#
	$textboxBaseCollectionName.Location = '134, 32'
	$textboxBaseCollectionName.Name = 'textboxBaseCollectionName'
	$textboxBaseCollectionName.ReadOnly = $True
	$textboxBaseCollectionName.Size = '224, 20'
	$textboxBaseCollectionName.TabIndex = 4
	$textboxBaseCollectionName.TabStop = $False
	$textboxBaseCollectionName.TextAlign = 'Right'
	#
	# labelCollectionType
	#
	$labelCollectionType.Font = 'Microsoft Sans Serif, 8.25pt'
	$labelCollectionType.Location = '7, 82'
	$labelCollectionType.Name = 'labelCollectionType'
	$labelCollectionType.Size = '129, 23'
	$labelCollectionType.TabIndex = 3
	$labelCollectionType.Text = 'Collection Type:'
	#
	# labelNumberOfMembers
	#
	$labelNumberOfMembers.Font = 'Microsoft Sans Serif, 8.25pt'
	$labelNumberOfMembers.Location = '6, 105'
	$labelNumberOfMembers.Name = 'labelNumberOfMembers'
	$labelNumberOfMembers.Size = '130, 23'
	$labelNumberOfMembers.TabIndex = 2
	$labelNumberOfMembers.Text = 'Number of Members:'
	#
	# labelCollectionID
	#
	$labelCollectionID.Font = 'Microsoft Sans Serif, 8.25pt'
	$labelCollectionID.Location = '6, 59'
	$labelCollectionID.Name = 'labelCollectionID'
	$labelCollectionID.Size = '129, 23'
	$labelCollectionID.TabIndex = 1
	$labelCollectionID.Text = 'Collection ID:'
	#
	# labelName
	#
	$labelName.Font = 'Microsoft Sans Serif, 8.25pt'
	$labelName.Location = '7, 36'
	$labelName.Name = 'labelName'
	$labelName.Size = '129, 23'
	$labelName.TabIndex = 0
	$labelName.Text = 'Name:'
	#
	# errorprovider1
	#
	$errorprovider1.ContainerControl = $formCreatePilotCollection
	$groupbox1.ResumeLayout()
	$groupbox2.ResumeLayout()
	$formCreatePilotCollection.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formCreatePilotCollection.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formCreatePilotCollection.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formCreatePilotCollection.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formCreatePilotCollection.ShowDialog()

} #End Function

#Call the form
Call-Create-CMPilotCollection_psf | Out-Null
